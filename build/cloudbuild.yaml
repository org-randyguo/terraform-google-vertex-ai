timeout: 3600s
steps:
- name: 'asia-east2-docker.pkg.dev/${PROJECT_ID}/tools/terraform'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      terraform init 
  dir: 'test-project-ai'
  env:
    - "TF_VAR_project_id=${PROJECT_ID}"

- name: 'asia-east2-docker.pkg.dev/${PROJECT_ID}/tools/terraform'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      terraform validate 
  dir: 'test-project-ai'
  env:
    - "TF_VAR_project_id=${PROJECT_ID}"
    
- name: 'asia-east2-docker.pkg.dev/${PROJECT_ID}/tools/terraform'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      terraform plan -out=tfoutput.plan
  dir: 'test-project-ai'
  env:
    - "TF_VAR_project_id=${PROJECT_ID}"
    
- name: 'asia-east2-docker.pkg.dev/${PROJECT_ID}/tools/terraform'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      terraform show -no-color tfoutput.plan 
  dir: 'test-project-ai'
  env:
    - "TF_VAR_project_id=${PROJECT_ID}"   

- name: 'gcr.io/cloud-builders/curl:latest'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      curl -X POST -H "Authorization: token ${_GITHUB}" \
        -H "Accept: application/vnd.github+json" \
        -d "{\"body\": \"$(cat tfoutput.plan)\"}" \
        https://api.github.com/repos/randyguogithub/terraform-google-vertex-ai/issues/1/comments
  secretEnv: ['_GITHUB']
    
# - name: 'asia-east2-docker.pkg.dev/${PROJECT_ID}/polaris/terraform'
#   args: ['apply']
#   dir: 'test-project-ai'
#   env:
#     - "TF_VAR_project_id=${PROJECT_ID}"     
# images:
#   - '${_TERRAFORM_IMAGE}:${_TERRAFORM_VERSION}'
#   - '${_TERRAFORM_IMAGE}:latest'

options:
  logging: CLOUD_LOGGING_ONLY
  
tags:
- 'ci'
- 'integration'

substitutions:
  _TERRAFORM_VERSION: 1.9.5
  _TERRAFORM_IMAGE: 'asia-east2-docker.pkg.dev/${PROJECT_ID}/polaris/terraform'
availableSecrets:
  secretManager:
  - versionName: projects/${PROJECT_ID}/secrets/github_token/versions/latest
    env: '_GITHUB'
